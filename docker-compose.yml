services:
  db:  
    image: postgres:15-alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: triviagame_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
    - app_network
  app:
    build: 
      context: .
      dockerfile: dockerfile.dev
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - FLASK_SECRET_KEY
      - DATABASE_PUBLIC_URL 
      - FLASK_APP=trivia_game
    entrypoint: >
      sh -c "flask db init && flask db migrate && flask db upgrade && gunicorn -b 0.0.0.0:8080 -t 30 --log-level debug trivia_game:app"
    networks:
    - app_network

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge